warning: field `options` is never read
 --> src/emit_plugin.rs:6:5
  |
5 | pub struct EmitPlugin {
  |            ---------- field in this struct
6 |     options: EmitPluginOptions
  |     ^^^^^^^
  |
  = note: `#[warn(dead_code)]` on by default

warning: `rspack-rust-api` (bin "rspack-rust-api") generated 1 warning
    Finished dev [unoptimized + debuginfo] target(s) in 0.93s
     Running `target/debug/rspack-rust-api`
[src/main.rs:24:5] &entry_request = "/Users/bytedance/project/rspack-rust-api/fixtures/index.js"
[src/emit_plugin.rs:21:5] assets = {}
[src/emit_plugin.rs:21:5] stats = Stats {
    compilation: Compilation {
        id: CompilationId(
            1,
        ),
        hot_index: 0,
        records: None,
        options: CompilerOptions {
            context: Context {
                inner: "root",
            },
            dev_server: DevServerOptions {
                hot: false,
            },
            output: OutputOptions {
                path: "/Users/bytedance/project/rspack-rust-api/dist",
                pathinfo: Bool(
                    false,
                ),
                clean: false,
                public_path: Auto,
                asset_module_filename: Filename(
                    Template(
                        "asset-[name].js",
                    ),
                ),
                wasm_loading: Disable,
                webassembly_module_filename: Filename(
                    Template(
                        "webassembly.js",
                    ),
                ),
                unique_name: "main",
                chunk_loading: Enable(
                    Import,
                ),
                chunk_loading_global: "",
                filename: Filename(
                    Template(
                        "[name].js",
                    ),
                ),
                chunk_filename: Filename(
                    Template(
                        "[id].js",
                    ),
                ),
                cross_origin_loading: Disable,
                css_filename: Filename(
                    Template(
                        "[name].css",
                    ),
                ),
                css_chunk_filename: Filename(
                    Template(
                        "[id].css",
                    ),
                ),
                hot_update_main_filename: Filename(
                    Template(
                        "[name].[hash].hot-update.js",
                    ),
                ),
                hot_update_chunk_filename: Filename(
                    Template(
                        "[id].[hash].hot-update.js",
                    ),
                ),
                hot_update_global: "",
                library: None,
                enabled_library_types: None,
                strict_module_error_handling: false,
                global_object: "window",
                import_function_name: "import",
                iife: false,
                module: false,
                trusted_types: None,
                source_map_filename: Filename(
                    Template(
                        "[file].map",
                    ),
                ),
                hash_function: MD4,
                hash_digest: Hex,
                hash_digest_length: 20,
                hash_salt: Salt(
                    "salt",
                ),
                async_chunks: false,
                worker_chunk_loading: Disable,
                worker_wasm_loading: Disable,
                worker_public_path: "",
                script_type: "text/javascript",
                environment: Environment {
                    const: Some(
                        true,
                    ),
                    arrow_function: Some(
                        true,
                    ),
                },
            },
            target: Target {
                es_version: Esx(
                    Es2022,
                ),
            },
            mode: Development,
            resolve: Resolve {
                extensions: Some(
                    [
                        ".js",
                    ],
                ),
                alias: None,
                prefer_relative: None,
                prefer_absolute: None,
                symlinks: None,
                main_files: None,
                main_fields: None,
                condition_names: None,
                tsconfig: None,
                modules: None,
                fallback: None,
                fully_specified: None,
                exports_fields: None,
                extension_alias: None,
                alias_fields: None,
                roots: None,
                restrictions: None,
                imports_fields: None,
                by_dependency: None,
                description_files: None,
                enforce_extension: None,
            },
            resolve_loader: Resolve {
                extensions: Some(
                    [
                        ".js",
                    ],
                ),
                alias: None,
                prefer_relative: None,
                prefer_absolute: None,
                symlinks: None,
                main_files: None,
                main_fields: None,
                condition_names: None,
                tsconfig: None,
                modules: None,
                fallback: None,
                fully_specified: None,
                exports_fields: None,
                extension_alias: None,
                alias_fields: None,
                roots: None,
                restrictions: None,
                imports_fields: None,
                by_dependency: None,
                description_files: None,
                enforce_extension: None,
            },
            module: ModuleOptions {
                rules: [],
                parser: None,
                generator: None,
                no_parse: None,
            },
            stats: StatsOptions {
                colors: false,
            },
            snapshot: SnapshotOptions,
            cache: Disabled,
            experiments: Experiments {
                incremental_rebuild: IncrementalRebuild {
                    make: None,
                    emit_asset: false,
                },
                top_level_await: false,
                rspack_future: RspackFuture,
            },
            node: None,
            optimization: Optimization {
                remove_available_modules: false,
                side_effects: False,
                provided_exports: false,
                used_exports: False,
                inner_graph: true,
                mangle_exports: False,
                concatenate_modules: false,
            },
            profile: false,
            bail: false,
            builtins: Builtins {
                define: {},
                provide: {},
            },
            __references: {},
        },
        entries: {},
        global_entry: EntryData {
            dependencies: [
                DependencyId(
                    0,
                ),
            ],
            include_dependencies: [],
            options: EntryOptions {
                name: None,
                runtime: None,
                chunk_loading: None,
                async_chunks: None,
                public_path: None,
                base_uri: None,
                filename: None,
                library: None,
                depend_on: None,
            },
        },
        other_module_graph: Some(
            ModuleGraphPartial {
                modules: {},
                dependencies: {},
                blocks: {},
                module_graph_modules: {},
                connections: {},
                dependency_id_to_module_identifier: {},
                dependency_id_to_connection_id: {},
                dependency_id_to_parents: {},
                exports_info_map: VecMap {
                    inner: [],
                },
                export_info_map: VecMap {
                    inner: [],
                },
                connection_to_condition: {},
                dep_meta_map: {},
            },
        ),
        dependency_factories: {
            Entry: NormalModuleFactory {
                options: CompilerOptions {
                    context: Context {
                        inner: "root",
                    },
                    dev_server: DevServerOptions {
                        hot: false,
                    },
                    output: OutputOptions {
                        path: "/Users/bytedance/project/rspack-rust-api/dist",
                        pathinfo: Bool(
                            false,
                        ),
                        clean: false,
                        public_path: Auto,
                        asset_module_filename: Filename(
                            Template(
                                "asset-[name].js",
                            ),
                        ),
                        wasm_loading: Disable,
                        webassembly_module_filename: Filename(
                            Template(
                                "webassembly.js",
                            ),
                        ),
                        unique_name: "main",
                        chunk_loading: Enable(
                            Import,
                        ),
                        chunk_loading_global: "",
                        filename: Filename(
                            Template(
                                "[name].js",
                            ),
                        ),
                        chunk_filename: Filename(
                            Template(
                                "[id].js",
                            ),
                        ),
                        cross_origin_loading: Disable,
                        css_filename: Filename(
                            Template(
                                "[name].css",
                            ),
                        ),
                        css_chunk_filename: Filename(
                            Template(
                                "[id].css",
                            ),
                        ),
                        hot_update_main_filename: Filename(
                            Template(
                                "[name].[hash].hot-update.js",
                            ),
                        ),
                        hot_update_chunk_filename: Filename(
                            Template(
                                "[id].[hash].hot-update.js",
                            ),
                        ),
                        hot_update_global: "",
                        library: None,
                        enabled_library_types: None,
                        strict_module_error_handling: false,
                        global_object: "window",
                        import_function_name: "import",
                        iife: false,
                        module: false,
                        trusted_types: None,
                        source_map_filename: Filename(
                            Template(
                                "[file].map",
                            ),
                        ),
                        hash_function: MD4,
                        hash_digest: Hex,
                        hash_digest_length: 20,
                        hash_salt: Salt(
                            "salt",
                        ),
                        async_chunks: false,
                        worker_chunk_loading: Disable,
                        worker_wasm_loading: Disable,
                        worker_public_path: "",
                        script_type: "text/javascript",
                        environment: Environment {
                            const: Some(
                                true,
                            ),
                            arrow_function: Some(
                                true,
                            ),
                        },
                    },
                    target: Target {
                        es_version: Esx(
                            Es2022,
                        ),
                    },
                    mode: Development,
                    resolve: Resolve {
                        extensions: Some(
                            [
                                ".js",
                            ],
                        ),
                        alias: None,
                        prefer_relative: None,
                        prefer_absolute: None,
                        symlinks: None,
                        main_files: None,
                        main_fields: None,
                        condition_names: None,
                        tsconfig: None,
                        modules: None,
                        fallback: None,
                        fully_specified: None,
                        exports_fields: None,
                        extension_alias: None,
                        alias_fields: None,
                        roots: None,
                        restrictions: None,
                        imports_fields: None,
                        by_dependency: None,
                        description_files: None,
                        enforce_extension: None,
                    },
                    resolve_loader: Resolve {
                        extensions: Some(
                            [
                                ".js",
                            ],
                        ),
                        alias: None,
                        prefer_relative: None,
                        prefer_absolute: None,
                        symlinks: None,
                        main_files: None,
                        main_fields: None,
                        condition_names: None,
                        tsconfig: None,
                        modules: None,
                        fallback: None,
                        fully_specified: None,
                        exports_fields: None,
                        extension_alias: None,
                        alias_fields: None,
                        roots: None,
                        restrictions: None,
                        imports_fields: None,
                        by_dependency: None,
                        description_files: None,
                        enforce_extension: None,
                    },
                    module: ModuleOptions {
                        rules: [],
                        parser: None,
                        generator: None,
                        no_parse: None,
                    },
                    stats: StatsOptions {
                        colors: false,
                    },
                    snapshot: SnapshotOptions,
                    cache: Disabled,
                    experiments: Experiments {
                        incremental_rebuild: IncrementalRebuild {
                            make: None,
                            emit_asset: false,
                        },
                        top_level_await: false,
                        rspack_future: RspackFuture,
                    },
                    node: None,
                    optimization: Optimization {
                        remove_available_modules: false,
                        side_effects: False,
                        provided_exports: false,
                        used_exports: False,
                        inner_graph: true,
                        mangle_exports: False,
                        concatenate_modules: false,
                    },
                    profile: false,
                    bail: false,
                    builtins: Builtins {
                        define: {},
                        provide: {},
                    },
                    __references: {},
                },
                loader_resolver_factory: ResolverFactory {
                    base_options: Resolve {
                        extensions: Some(
                            [
                                ".js",
                            ],
                        ),
                        alias: None,
                        prefer_relative: None,
                        prefer_absolute: None,
                        symlinks: None,
                        main_files: None,
                        main_fields: None,
                        condition_names: None,
                        tsconfig: None,
                        modules: None,
                        fallback: None,
                        fully_specified: None,
                        exports_fields: None,
                        extension_alias: None,
                        alias_fields: None,
                        roots: None,
                        restrictions: None,
                        imports_fields: None,
                        by_dependency: None,
                        description_files: None,
                        enforce_extension: None,
                    },
                    resolver: OxcResolver(
                        ResolveOptions {
                            tsconfig: None,
                            alias: [],
                            alias_fields: [
                                [
                                    "browser",
                                ],
                            ],
                            condition_names: [
                                "module",
                                "import",
                            ],
                            description_files: [
                                "package.json",
                            ],
                            enforce_extension: Disabled,
                            exports_fields: [
                                [
                                    "exports",
                                ],
                            ],
                            imports_fields: [
                                [
                                    "imports",
                                ],
                            ],
                            extension_alias: [],
                            extensions: [
                                ".js",
                            ],
                            fallback: [],
                            fully_specified: false,
                            main_fields: [
                                "module",
                                "main",
                            ],
                            main_files: [
                                "index",
                            ],
                            modules: [
                                "node_modules",
                            ],
                            resolve_to_context: false,
                            prefer_relative: false,
                            prefer_absolute: false,
                            restrictions: [],
                            roots: [],
                            symlinks: true,
                            builtin_modules: false,
                        },
                    ),
                    resolvers: {
                        ResolveOptionsWithDependencyType {
                            resolve_options: None,
                            resolve_to_context: false,
                            dependency_category: CommonJS,
                        }: OxcResolver(
                            ResolveOptions {
                                tsconfig: None,
                                alias: [],
                                alias_fields: [
                                    [
                                        "browser",
                                    ],
                                ],
                                condition_names: [
                                    "module",
                                    "import",
                                ],
                                description_files: [
                                    "package.json",
                                ],
                                enforce_extension: Disabled,
                                exports_fields: [
                                    [
                                        "exports",
                                    ],
                                ],
                                imports_fields: [
                                    [
                                        "imports",
                                    ],
                                ],
                                extension_alias: [],
                                extensions: [
                                    ".js",
                                ],
                                fallback: [],
                                fully_specified: false,
                                main_fields: [
                                    "module",
                                    "main",
                                ],
                                main_files: [
                                    "index",
                                ],
                                modules: [
                                    "node_modules",
                                ],
                                resolve_to_context: false,
                                prefer_relative: false,
                                prefer_absolute: false,
                                restrictions: [],
                                roots: [],
                                symlinks: true,
                                builtin_modules: false,
                            },
                        ),
                    },
                },
                plugin_driver: PluginDriver {
                    options: CompilerOptions {
                        context: Context {
                            inner: "root",
                        },
                        dev_server: DevServerOptions {
                            hot: false,
                        },
                        output: OutputOptions {
                            path: "/Users/bytedance/project/rspack-rust-api/dist",
                            pathinfo: Bool(
                                false,
                            ),
                            clean: false,
                            public_path: Auto,
                            asset_module_filename: Filename(
                                Template(
                                    "asset-[name].js",
                                ),
                            ),
                            wasm_loading: Disable,
                            webassembly_module_filename: Filename(
                                Template(
                                    "webassembly.js",
                                ),
                            ),
                            unique_name: "main",
                            chunk_loading: Enable(
                                Import,
                            ),
                            chunk_loading_global: "",
                            filename: Filename(
                                Template(
                                    "[name].js",
                                ),
                            ),
                            chunk_filename: Filename(
                                Template(
                                    "[id].js",
                                ),
                            ),
                            cross_origin_loading: Disable,
                            css_filename: Filename(
                                Template(
                                    "[name].css",
                                ),
                            ),
                            css_chunk_filename: Filename(
                                Template(
                                    "[id].css",
                                ),
                            ),
                            hot_update_main_filename: Filename(
                                Template(
                                    "[name].[hash].hot-update.js",
                                ),
                            ),
                            hot_update_chunk_filename: Filename(
                                Template(
                                    "[id].[hash].hot-update.js",
                                ),
                            ),
                            hot_update_global: "",
                            library: None,
                            enabled_library_types: None,
                            strict_module_error_handling: false,
                            global_object: "window",
                            import_function_name: "import",
                            iife: false,
                            module: false,
                            trusted_types: None,
                            source_map_filename: Filename(
                                Template(
                                    "[file].map",
                                ),
                            ),
                            hash_function: MD4,
                            hash_digest: Hex,
                            hash_digest_length: 20,
                            hash_salt: Salt(
                                "salt",
                            ),
                            async_chunks: false,
                            worker_chunk_loading: Disable,
                            worker_wasm_loading: Disable,
                            worker_public_path: "",
                            script_type: "text/javascript",
                            environment: Environment {
                                const: Some(
                                    true,
                                ),
                                arrow_function: Some(
                                    true,
                                ),
                            },
                        },
                        target: Target {
                            es_version: Esx(
                                Es2022,
                            ),
                        },
                        mode: Development,
                        resolve: Resolve {
                            extensions: Some(
                                [
                                    ".js",
                                ],
                            ),
                            alias: None,
                            prefer_relative: None,
                            prefer_absolute: None,
                            symlinks: None,
                            main_files: None,
                            main_fields: None,
                            condition_names: None,
                            tsconfig: None,
                            modules: None,
                            fallback: None,
                            fully_specified: None,
                            exports_fields: None,
                            extension_alias: None,
                            alias_fields: None,
                            roots: None,
                            restrictions: None,
                            imports_fields: None,
                            by_dependency: None,
                            description_files: None,
                            enforce_extension: None,
                        },
                        resolve_loader: Resolve {
                            extensions: Some(
                                [
                                    ".js",
                                ],
                            ),
                            alias: None,
                            prefer_relative: None,
                            prefer_absolute: None,
                            symlinks: None,
                            main_files: None,
                            main_fields: None,
                            condition_names: None,
                            tsconfig: None,
                            modules: None,
                            fallback: None,
                            fully_specified: None,
                            exports_fields: None,
                            extension_alias: None,
                            alias_fields: None,
                            roots: None,
                            restrictions: None,
                            imports_fields: None,
                            by_dependency: None,
                            description_files: None,
                            enforce_extension: None,
                        },
                        module: ModuleOptions {
                            rules: [],
                            parser: None,
                            generator: None,
                            no_parse: None,
                        },
                        stats: StatsOptions {
                            colors: false,
                        },
                        snapshot: SnapshotOptions,
                        cache: Disabled,
                        experiments: Experiments {
                            incremental_rebuild: IncrementalRebuild {
                                make: None,
                                emit_asset: false,
                            },
                            top_level_await: false,
                            rspack_future: RspackFuture,
                        },
                        node: None,
                        optimization: Optimization {
                            remove_available_modules: false,
                            side_effects: False,
                            provided_exports: false,
                            used_exports: False,
                            inner_graph: true,
                            mangle_exports: False,
                            concatenate_modules: false,
                        },
                        profile: false,
                        bail: false,
                        builtins: Builtins {
                            define: {},
                            provide: {},
                        },
                        __references: {},
                    },
                    plugins: [
                        EntryPlugin {
                            inner: EntryPluginInner {
                                dependency: EntryDependency {
                                    id: DependencyId(
                                        0,
                                    ),
                                    request: "/Users/bytedance/project/rspack-rust-api/fixtures/index.js",
                                    context: Context {
                                        inner: "/Users/bytedance/project/rspack-rust-api",
                                    },
                                    is_global: true,
                                },
                                options: EntryOptions {
                                    name: None,
                                    runtime: None,
                                    chunk_loading: None,
                                    async_chunks: None,
                                    public_path: None,
                                    base_uri: None,
                                    filename: None,
                                    library: None,
                                    depend_on: None,
                                },
                            },
                        },
                        EmitPlugin {
                            options: EmitPluginOptions,
                        },
                    ],
                    resolver_factory: ResolverFactory {
                        base_options: Resolve {
                            extensions: Some(
                                [
                                    ".js",
                                ],
                            ),
                            alias: None,
                            prefer_relative: None,
                            prefer_absolute: None,
                            symlinks: None,
                            main_files: None,
                            main_fields: None,
                            condition_names: None,
                            tsconfig: None,
                            modules: None,
                            fallback: None,
                            fully_specified: None,
                            exports_fields: None,
                            extension_alias: None,
                            alias_fields: None,
                            roots: None,
                            restrictions: None,
                            imports_fields: None,
                            by_dependency: None,
                            description_files: None,
                            enforce_extension: None,
                        },
                        resolver: OxcResolver(
                            ResolveOptions {
                                tsconfig: None,
                                alias: [],
                                alias_fields: [
                                    [
                                        "browser",
                                    ],
                                ],
                                condition_names: [
                                    "module",
                                    "import",
                                ],
                                description_files: [
                                    "package.json",
                                ],
                                enforce_extension: Disabled,
                                exports_fields: [
                                    [
                                        "exports",
                                    ],
                                ],
                                imports_fields: [
                                    [
                                        "imports",
                                    ],
                                ],
                                extension_alias: [],
                                extensions: [
                                    ".js",
                                ],
                                fallback: [],
                                fully_specified: false,
                                main_fields: [
                                    "module",
                                    "main",
                                ],
                                main_files: [
                                    "index",
                                ],
                                modules: [
                                    "node_modules",
                                ],
                                resolve_to_context: false,
                                prefer_relative: false,
                                prefer_absolute: false,
                                restrictions: [],
                                roots: [],
                                symlinks: true,
                                builtin_modules: false,
                            },
                        ),
                        resolvers: {
                            ResolveOptionsWithDependencyType {
                                resolve_options: None,
                                resolve_to_context: false,
                                dependency_category: Esm,
                            }: OxcResolver(
                                ResolveOptions {
                                    tsconfig: None,
                                    alias: [],
                                    alias_fields: [
                                        [
                                            "browser",
                                        ],
                                    ],
                                    condition_names: [
                                        "module",
                                        "import",
                                    ],
                                    description_files: [
                                        "package.json",
                                    ],
                                    enforce_extension: Disabled,
                                    exports_fields: [
                                        [
                                            "exports",
                                        ],
                                    ],
                                    imports_fields: [
                                        [
                                            "imports",
                                        ],
                                    ],
                                    extension_alias: [],
                                    extensions: [
                                        ".js",
                                    ],
                                    fallback: [],
                                    fully_specified: false,
                                    main_fields: [
                                        "module",
                                        "main",
                                    ],
                                    main_files: [
                                        "index",
                                    ],
                                    modules: [
                                        "node_modules",
                                    ],
                                    resolve_to_context: false,
                                    prefer_relative: false,
                                    prefer_absolute: false,
                                    restrictions: [],
                                    roots: [],
                                    symlinks: true,
                                    builtin_modules: false,
                                },
                            ),
                        },
                    },
                    diagnostics: Mutex {
                        data: [],
                        poisoned: false,
                        ..
                    },
                    compiler_hooks: CompilerHooks {
                        this_compilation: CompilerThisCompilationHook,
                        compilation: CompilerCompilationHook,
                        make: CompilerMakeHook,
                        finish_make: CompilerFinishMakeHook,
                        should_emit: CompilerShouldEmitHook,
                        emit: CompilerEmitHook,
                        after_emit: CompilerAfterEmitHook,
                        asset_emitted: CompilerAssetEmittedHook,
                    },
                    compilation_hooks: CompilationHooks {
                        add_entry: CompilationAddEntryHook,
                        build_module: CompilationBuildModuleHook,
                        still_valid_module: CompilationStillValidModuleHook,
                        succeed_module: CompilationSucceedModuleHook,
                        execute_module: CompilationExecuteModuleHook,
                        finish_modules: CompilationFinishModulesHook,
                        seal: CompilationSealHook,
                        optimize_dependencies: CompilationOptimizeDependenciesHook,
                        optimize_modules: CompilationOptimizeModulesHook,
                        after_optimize_modules: CompilationAfterOptimizeModulesHook,
                        optimize_chunks: CompilationOptimizeChunksHook,
                        optimize_tree: CompilationOptimizeTreeHook,
                        optimize_chunk_modules: CompilationOptimizeChunkModulesHook,
                        module_ids: CompilationModuleIdsHook,
                        chunk_ids: CompilationChunkIdsHook,
                        runtime_module: CompilationRuntimeModuleHook,
                        runtime_requirement_in_module: CompilationRuntimeRequirementInModuleHook,
                        additional_chunk_runtime_requirements: CompilationAdditionalChunkRuntimeRequirementsHook,
                        additional_tree_runtime_requirements: CompilationAdditionalTreeRuntimeRequirementsHook,
                        runtime_requirement_in_tree: CompilationRuntimeRequirementInTreeHook,
                        optimize_code_generation: CompilationOptimizeCodeGenerationHook,
                        chunk_hash: CompilationChunkHashHook,
                        content_hash: CompilationContentHashHook,
                        render_manifest: CompilationRenderManifestHook,
                        chunk_asset: CompilationChunkAssetHook,
                        process_assets: CompilationProcessAssetsHook,
                        after_process_assets: CompilationAfterProcessAssetsHook,
                        after_seal: CompilationAfterSealHook,
                    },
                    normal_module_factory_hooks: NormalModuleFactoryHooks {
                        before_resolve: NormalModuleFactoryBeforeResolveHook,
                        factorize: NormalModuleFactoryFactorizeHook,
                        resolve_for_scheme: NormalModuleFactoryResolveForSchemeHook,
                        after_resolve: NormalModuleFactoryAfterResolveHook,
                        create_module: NormalModuleFactoryCreateModuleHook,
                        module: NormalModuleFactoryModuleHook,
                        resolve_loader: NormalModuleFactoryResolveLoaderHook,
                    },
                    context_module_factory_hooks: ContextModuleFactoryHooks {
                        before_resolve: ContextModuleFactoryBeforeResolveHook,
                        after_resolve: ContextModuleFactoryAfterResolveHook,
                    },
                    normal_module_hooks: NormalModuleHooks {
                        read_resource: NormalModuleReadResourceHook,
                        loader: NormalModuleLoaderHook,
                        loader_should_yield: NormalModuleLoaderShouldYieldHook,
                        loader_yield: NormalModuleLoaderStartYieldingHook,
                        before_loaders: NormalModuleBeforeLoadersHook,
                        additional_data: NormalModuleAdditionalDataHook,
                    },
                },
            },
        },
        runtime_modules: {},
        runtime_module_code_generation_results: {},
        chunk_graph: ChunkGraph {
            split_point_module_identifier_to_chunk_ukey: {},
            block_to_chunk_group_ukey: {},
            chunk_graph_module_by_module_identifier: {},
            chunk_graph_chunk_by_chunk_ukey: {},
            runtime_ids: {},
        },
        chunk_by_ukey: Database,
        chunk_group_by_ukey: Database,
        entrypoints: {},
        async_entrypoints: [],
        assets: {},
        emitted_assets: {},
        diagnostics: [
            Diagnostic {
                inner: "No parser registered for 'javascript/auto'",
                module_identifier: None,
                file: None,
            },
        ],
        logging: {
            "rspack.Compilation": [
                Time {
                    label: "finish modules",
                    secs: 0,
                    subsec_nanos: 438084,
                },
                Time {
                    label: "optimize dependencies",
                    secs: 0,
                    subsec_nanos: 958,
                },
                Time {
                    label: "create chunks",
                    secs: 0,
                    subsec_nanos: 65291,
                },
                Time {
                    label: "optimize",
                    secs: 0,
                    subsec_nanos: 10500,
                },
                Time {
                    label: "module ids",
                    secs: 0,
                    subsec_nanos: 833,
                },
                Time {
                    label: "chunk ids",
                    secs: 0,
                    subsec_nanos: 875,
                },
                Time {
                    label: "optimize code generation",
                    secs: 0,
                    subsec_nanos: 958,
                },
                Time {
                    label: "code generation",
                    secs: 0,
                    subsec_nanos: 15833,
                },
                Time {
                    label: "runtime requirements.modules",
                    secs: 0,
                    subsec_nanos: 1166,
                },
                Time {
                    label: "runtime requirements.chunks",
                    secs: 0,
                    subsec_nanos: 459,
                },
                Time {
                    label: "runtime requirements.entries",
                    secs: 0,
                    subsec_nanos: 583,
                },
                Time {
                    label: "runtime requirements",
                    secs: 0,
                    subsec_nanos: 6500,
                },
                Time {
                    label: "hashing: hash chunks",
                    secs: 0,
                    subsec_nanos: 70333,
                },
                Time {
                    label: "hashing: hash runtime chunks",
                    secs: 0,
                    subsec_nanos: 13000,
                },
                Time {
                    label: "hashing: process full hash chunks",
                    secs: 0,
                    subsec_nanos: 208,
                },
                Time {
                    label: "hashing",
                    secs: 0,
                    subsec_nanos: 180292,
                },
                Time {
                    label: "create module assets",
                    secs: 0,
                    subsec_nanos: 1583,
                },
                Time {
                    label: "create chunk assets",
                    secs: 0,
                    subsec_nanos: 13500,
                },
                Time {
                    label: "process assets",
                    secs: 0,
                    subsec_nanos: 4709,
                },
                Time {
                    label: "after process assets",
                    secs: 0,
                    subsec_nanos: 1542,
                },
                Time {
                    label: "after seal",
                    secs: 0,
                    subsec_nanos: 1750,
                },
            ],
            "rspack.Compiler": [
                Time {
                    label: "make hook",
                    secs: 0,
                    subsec_nanos: 93542,
                },
                Time {
                    label: "make",
                    secs: 0,
                    subsec_nanos: 630875,
                },
                Time {
                    label: "finish make hook",
                    secs: 0,
                    subsec_nanos: 1958,
                },
                Time {
                    label: "finish compilation",
                    secs: 0,
                    subsec_nanos: 3333834,
                },
                Time {
                    label: "seal compilation",
                    secs: 0,
                    subsec_nanos: 333042,
                },
            ],
            "rspack.buildChunkGraph": [
                Time {
                    label: "prepare entrypoints",
                    secs: 0,
                    subsec_nanos: 4375,
                },
                Time {
                    label: "process queue",
                    secs: 0,
                    subsec_nanos: 84,
                },
                Time {
                    label: "extend chunkGroup runtime",
                    secs: 0,
                    subsec_nanos: 250,
                },
                Log {
                    message: "0 queue items processed (0 blocks)",
                },
                Log {
                    message: "0 chunk groups connected",
                },
                Log {
                    message: "0 chunk groups processed for merging (0 module sets)",
                },
                Log {
                    message: "0 chunk group info updated (0 already connected chunk groups reconnected)",
                },
            ],
        },
        plugin_driver: PluginDriver {
            options: CompilerOptions {
                context: Context {
                    inner: "root",
                },
                dev_server: DevServerOptions {
                    hot: false,
                },
                output: OutputOptions {
                    path: "/Users/bytedance/project/rspack-rust-api/dist",
                    pathinfo: Bool(
                        false,
                    ),
                    clean: false,
                    public_path: Auto,
                    asset_module_filename: Filename(
                        Template(
                            "asset-[name].js",
                        ),
                    ),
                    wasm_loading: Disable,
                    webassembly_module_filename: Filename(
                        Template(
                            "webassembly.js",
                        ),
                    ),
                    unique_name: "main",
                    chunk_loading: Enable(
                        Import,
                    ),
                    chunk_loading_global: "",
                    filename: Filename(
                        Template(
                            "[name].js",
                        ),
                    ),
                    chunk_filename: Filename(
                        Template(
                            "[id].js",
                        ),
                    ),
                    cross_origin_loading: Disable,
                    css_filename: Filename(
                        Template(
                            "[name].css",
                        ),
                    ),
                    css_chunk_filename: Filename(
                        Template(
                            "[id].css",
                        ),
                    ),
                    hot_update_main_filename: Filename(
                        Template(
                            "[name].[hash].hot-update.js",
                        ),
                    ),
                    hot_update_chunk_filename: Filename(
                        Template(
                            "[id].[hash].hot-update.js",
                        ),
                    ),
                    hot_update_global: "",
                    library: None,
                    enabled_library_types: None,
                    strict_module_error_handling: false,
                    global_object: "window",
                    import_function_name: "import",
                    iife: false,
                    module: false,
                    trusted_types: None,
                    source_map_filename: Filename(
                        Template(
                            "[file].map",
                        ),
                    ),
                    hash_function: MD4,
                    hash_digest: Hex,
                    hash_digest_length: 20,
                    hash_salt: Salt(
                        "salt",
                    ),
                    async_chunks: false,
                    worker_chunk_loading: Disable,
                    worker_wasm_loading: Disable,
                    worker_public_path: "",
                    script_type: "text/javascript",
                    environment: Environment {
                        const: Some(
                            true,
                        ),
                        arrow_function: Some(
                            true,
                        ),
                    },
                },
                target: Target {
                    es_version: Esx(
                        Es2022,
                    ),
                },
                mode: Development,
                resolve: Resolve {
                    extensions: Some(
                        [
                            ".js",
                        ],
                    ),
                    alias: None,
                    prefer_relative: None,
                    prefer_absolute: None,
                    symlinks: None,
                    main_files: None,
                    main_fields: None,
                    condition_names: None,
                    tsconfig: None,
                    modules: None,
                    fallback: None,
                    fully_specified: None,
                    exports_fields: None,
                    extension_alias: None,
                    alias_fields: None,
                    roots: None,
                    restrictions: None,
                    imports_fields: None,
                    by_dependency: None,
                    description_files: None,
                    enforce_extension: None,
                },
                resolve_loader: Resolve {
                    extensions: Some(
                        [
                            ".js",
                        ],
                    ),
                    alias: None,
                    prefer_relative: None,
                    prefer_absolute: None,
                    symlinks: None,
                    main_files: None,
                    main_fields: None,
                    condition_names: None,
                    tsconfig: None,
                    modules: None,
                    fallback: None,
                    fully_specified: None,
                    exports_fields: None,
                    extension_alias: None,
                    alias_fields: None,
                    roots: None,
                    restrictions: None,
                    imports_fields: None,
                    by_dependency: None,
                    description_files: None,
                    enforce_extension: None,
                },
                module: ModuleOptions {
                    rules: [],
                    parser: None,
                    generator: None,
                    no_parse: None,
                },
                stats: StatsOptions {
                    colors: false,
                },
                snapshot: SnapshotOptions,
                cache: Disabled,
                experiments: Experiments {
                    incremental_rebuild: IncrementalRebuild {
                        make: None,
                        emit_asset: false,
                    },
                    top_level_await: false,
                    rspack_future: RspackFuture,
                },
                node: None,
                optimization: Optimization {
                    remove_available_modules: false,
                    side_effects: False,
                    provided_exports: false,
                    used_exports: False,
                    inner_graph: true,
                    mangle_exports: False,
                    concatenate_modules: false,
                },
                profile: false,
                bail: false,
                builtins: Builtins {
                    define: {},
                    provide: {},
                },
                __references: {},
            },
            plugins: [
                EntryPlugin {
                    inner: EntryPluginInner {
                        dependency: EntryDependency {
                            id: DependencyId(
                                0,
                            ),
                            request: "/Users/bytedance/project/rspack-rust-api/fixtures/index.js",
                            context: Context {
                                inner: "/Users/bytedance/project/rspack-rust-api",
                            },
                            is_global: true,
                        },
                        options: EntryOptions {
                            name: None,
                            runtime: None,
                            chunk_loading: None,
                            async_chunks: None,
                            public_path: None,
                            base_uri: None,
                            filename: None,
                            library: None,
                            depend_on: None,
                        },
                    },
                },
                EmitPlugin {
                    options: EmitPluginOptions,
                },
            ],
            resolver_factory: ResolverFactory {
                base_options: Resolve {
                    extensions: Some(
                        [
                            ".js",
                        ],
                    ),
                    alias: None,
                    prefer_relative: None,
                    prefer_absolute: None,
                    symlinks: None,
                    main_files: None,
                    main_fields: None,
                    condition_names: None,
                    tsconfig: None,
                    modules: None,
                    fallback: None,
                    fully_specified: None,
                    exports_fields: None,
                    extension_alias: None,
                    alias_fields: None,
                    roots: None,
                    restrictions: None,
                    imports_fields: None,
                    by_dependency: None,
                    description_files: None,
                    enforce_extension: None,
                },
                resolver: OxcResolver(
                    ResolveOptions {
                        tsconfig: None,
                        alias: [],
                        alias_fields: [
                            [
                                "browser",
                            ],
                        ],
                        condition_names: [
                            "module",
                            "import",
                        ],
                        description_files: [
                            "package.json",
                        ],
                        enforce_extension: Disabled,
                        exports_fields: [
                            [
                                "exports",
                            ],
                        ],
                        imports_fields: [
                            [
                                "imports",
                            ],
                        ],
                        extension_alias: [],
                        extensions: [
                            ".js",
                        ],
                        fallback: [],
                        fully_specified: false,
                        main_fields: [
                            "module",
                            "main",
                        ],
                        main_files: [
                            "index",
                        ],
                        modules: [
                            "node_modules",
                        ],
                        resolve_to_context: false,
                        prefer_relative: false,
                        prefer_absolute: false,
                        restrictions: [],
                        roots: [],
                        symlinks: true,
                        builtin_modules: false,
                    },
                ),
                resolvers: {
                    ResolveOptionsWithDependencyType {
                        resolve_options: None,
                        resolve_to_context: false,
                        dependency_category: Esm,
                    }: OxcResolver(
                        ResolveOptions {
                            tsconfig: None,
                            alias: [],
                            alias_fields: [
                                [
                                    "browser",
                                ],
                            ],
                            condition_names: [
                                "module",
                                "import",
                            ],
                            description_files: [
                                "package.json",
                            ],
                            enforce_extension: Disabled,
                            exports_fields: [
                                [
                                    "exports",
                                ],
                            ],
                            imports_fields: [
                                [
                                    "imports",
                                ],
                            ],
                            extension_alias: [],
                            extensions: [
                                ".js",
                            ],
                            fallback: [],
                            fully_specified: false,
                            main_fields: [
                                "module",
                                "main",
                            ],
                            main_files: [
                                "index",
                            ],
                            modules: [
                                "node_modules",
                            ],
                            resolve_to_context: false,
                            prefer_relative: false,
                            prefer_absolute: false,
                            restrictions: [],
                            roots: [],
                            symlinks: true,
                            builtin_modules: false,
                        },
                    ),
                },
            },
            diagnostics: Mutex {
                data: [],
                poisoned: false,
                ..
            },
            compiler_hooks: CompilerHooks {
                this_compilation: CompilerThisCompilationHook,
                compilation: CompilerCompilationHook,
                make: CompilerMakeHook,
                finish_make: CompilerFinishMakeHook,
                should_emit: CompilerShouldEmitHook,
                emit: CompilerEmitHook,
                after_emit: CompilerAfterEmitHook,
                asset_emitted: CompilerAssetEmittedHook,
            },
            compilation_hooks: CompilationHooks {
                add_entry: CompilationAddEntryHook,
                build_module: CompilationBuildModuleHook,
                still_valid_module: CompilationStillValidModuleHook,
                succeed_module: CompilationSucceedModuleHook,
                execute_module: CompilationExecuteModuleHook,
                finish_modules: CompilationFinishModulesHook,
                seal: CompilationSealHook,
                optimize_dependencies: CompilationOptimizeDependenciesHook,
                optimize_modules: CompilationOptimizeModulesHook,
                after_optimize_modules: CompilationAfterOptimizeModulesHook,
                optimize_chunks: CompilationOptimizeChunksHook,
                optimize_tree: CompilationOptimizeTreeHook,
                optimize_chunk_modules: CompilationOptimizeChunkModulesHook,
                module_ids: CompilationModuleIdsHook,
                chunk_ids: CompilationChunkIdsHook,
                runtime_module: CompilationRuntimeModuleHook,
                runtime_requirement_in_module: CompilationRuntimeRequirementInModuleHook,
                additional_chunk_runtime_requirements: CompilationAdditionalChunkRuntimeRequirementsHook,
                additional_tree_runtime_requirements: CompilationAdditionalTreeRuntimeRequirementsHook,
                runtime_requirement_in_tree: CompilationRuntimeRequirementInTreeHook,
                optimize_code_generation: CompilationOptimizeCodeGenerationHook,
                chunk_hash: CompilationChunkHashHook,
                content_hash: CompilationContentHashHook,
                render_manifest: CompilationRenderManifestHook,
                chunk_asset: CompilationChunkAssetHook,
                process_assets: CompilationProcessAssetsHook,
                after_process_assets: CompilationAfterProcessAssetsHook,
                after_seal: CompilationAfterSealHook,
            },
            normal_module_factory_hooks: NormalModuleFactoryHooks {
                before_resolve: NormalModuleFactoryBeforeResolveHook,
                factorize: NormalModuleFactoryFactorizeHook,
                resolve_for_scheme: NormalModuleFactoryResolveForSchemeHook,
                after_resolve: NormalModuleFactoryAfterResolveHook,
                create_module: NormalModuleFactoryCreateModuleHook,
                module: NormalModuleFactoryModuleHook,
                resolve_loader: NormalModuleFactoryResolveLoaderHook,
            },
            context_module_factory_hooks: ContextModuleFactoryHooks {
                before_resolve: ContextModuleFactoryBeforeResolveHook,
                after_resolve: ContextModuleFactoryAfterResolveHook,
            },
            normal_module_hooks: NormalModuleHooks {
                read_resource: NormalModuleReadResourceHook,
                loader: NormalModuleLoaderHook,
                loader_should_yield: NormalModuleLoaderShouldYieldHook,
                loader_yield: NormalModuleLoaderStartYieldingHook,
                before_loaders: NormalModuleBeforeLoadersHook,
                additional_data: NormalModuleAdditionalDataHook,
            },
        },
        resolver_factory: ResolverFactory {
            base_options: Resolve {
                extensions: Some(
                    [
                        ".js",
                    ],
                ),
                alias: None,
                prefer_relative: None,
                prefer_absolute: None,
                symlinks: None,
                main_files: None,
                main_fields: None,
                condition_names: None,
                tsconfig: None,
                modules: None,
                fallback: None,
                fully_specified: None,
                exports_fields: None,
                extension_alias: None,
                alias_fields: None,
                roots: None,
                restrictions: None,
                imports_fields: None,
                by_dependency: None,
                description_files: None,
                enforce_extension: None,
            },
            resolver: OxcResolver(
                ResolveOptions {
                    tsconfig: None,
                    alias: [],
                    alias_fields: [
                        [
                            "browser",
                        ],
                    ],
                    condition_names: [
                        "module",
                        "import",
                    ],
                    description_files: [
                        "package.json",
                    ],
                    enforce_extension: Disabled,
                    exports_fields: [
                        [
                            "exports",
                        ],
                    ],
                    imports_fields: [
                        [
                            "imports",
                        ],
                    ],
                    extension_alias: [],
                    extensions: [
                        ".js",
                    ],
                    fallback: [],
                    fully_specified: false,
                    main_fields: [
                        "module",
                        "main",
                    ],
                    main_files: [
                        "index",
                    ],
                    modules: [
                        "node_modules",
                    ],
                    resolve_to_context: false,
                    prefer_relative: false,
                    prefer_absolute: false,
                    restrictions: [],
                    roots: [],
                    symlinks: true,
                    builtin_modules: false,
                },
            ),
            resolvers: {
                ResolveOptionsWithDependencyType {
                    resolve_options: None,
                    resolve_to_context: false,
                    dependency_category: Esm,
                }: OxcResolver(
                    ResolveOptions {
                        tsconfig: None,
                        alias: [],
                        alias_fields: [
                            [
                                "browser",
                            ],
                        ],
                        condition_names: [
                            "module",
                            "import",
                        ],
                        description_files: [
                            "package.json",
                        ],
                        enforce_extension: Disabled,
                        exports_fields: [
                            [
                                "exports",
                            ],
                        ],
                        imports_fields: [
                            [
                                "imports",
                            ],
                        ],
                        extension_alias: [],
                        extensions: [
                            ".js",
                        ],
                        fallback: [],
                        fully_specified: false,
                        main_fields: [
                            "module",
                            "main",
                        ],
                        main_files: [
                            "index",
                        ],
                        modules: [
                            "node_modules",
                        ],
                        resolve_to_context: false,
                        prefer_relative: false,
                        prefer_absolute: false,
                        restrictions: [],
                        roots: [],
                        symlinks: true,
                        builtin_modules: false,
                    },
                ),
            },
        },
        loader_resolver_factory: ResolverFactory {
            base_options: Resolve {
                extensions: Some(
                    [
                        ".js",
                    ],
                ),
                alias: None,
                prefer_relative: None,
                prefer_absolute: None,
                symlinks: None,
                main_files: None,
                main_fields: None,
                condition_names: None,
                tsconfig: None,
                modules: None,
                fallback: None,
                fully_specified: None,
                exports_fields: None,
                extension_alias: None,
                alias_fields: None,
                roots: None,
                restrictions: None,
                imports_fields: None,
                by_dependency: None,
                description_files: None,
                enforce_extension: None,
            },
            resolver: OxcResolver(
                ResolveOptions {
                    tsconfig: None,
                    alias: [],
                    alias_fields: [
                        [
                            "browser",
                        ],
                    ],
                    condition_names: [
                        "module",
                        "import",
                    ],
                    description_files: [
                        "package.json",
                    ],
                    enforce_extension: Disabled,
                    exports_fields: [
                        [
                            "exports",
                        ],
                    ],
                    imports_fields: [
                        [
                            "imports",
                        ],
                    ],
                    extension_alias: [],
                    extensions: [
                        ".js",
                    ],
                    fallback: [],
                    fully_specified: false,
                    main_fields: [
                        "module",
                        "main",
                    ],
                    main_files: [
                        "index",
                    ],
                    modules: [
                        "node_modules",
                    ],
                    resolve_to_context: false,
                    prefer_relative: false,
                    prefer_absolute: false,
                    restrictions: [],
                    roots: [],
                    symlinks: true,
                    builtin_modules: false,
                },
            ),
            resolvers: {
                ResolveOptionsWithDependencyType {
                    resolve_options: None,
                    resolve_to_context: false,
                    dependency_category: CommonJS,
                }: OxcResolver(
                    ResolveOptions {
                        tsconfig: None,
                        alias: [],
                        alias_fields: [
                            [
                                "browser",
                            ],
                        ],
                        condition_names: [
                            "module",
                            "import",
                        ],
                        description_files: [
                            "package.json",
                        ],
                        enforce_extension: Disabled,
                        exports_fields: [
                            [
                                "exports",
                            ],
                        ],
                        imports_fields: [
                            [
                                "imports",
                            ],
                        ],
                        extension_alias: [],
                        extensions: [
                            ".js",
                        ],
                        fallback: [],
                        fully_specified: false,
                        main_fields: [
                            "module",
                            "main",
                        ],
                        main_files: [
                            "index",
                        ],
                        modules: [
                            "node_modules",
                        ],
                        resolve_to_context: false,
                        prefer_relative: false,
                        prefer_absolute: false,
                        restrictions: [],
                        roots: [],
                        symlinks: true,
                        builtin_modules: false,
                    },
                ),
            },
        },
        named_chunks: {},
        named_chunk_groups: {},
        code_generation_results: CodeGenerationResults {
            module_generation_result_map: {},
            map: {},
        },
        built_modules: {},
        code_generated_modules: {},
        build_time_executed_modules: {},
        old_cache: Cache {
            is_idle: false,
            code_generate_occasion: CodeGenerateOccasion {
                storage: None,
            },
            create_chunk_assets_occasion: CreateChunkAssetsOccasion {
                storage: None,
            },
        },
        code_splitting_cache: CodeSplittingCache {
            chunk_by_ukey: Database,
            chunk_graph: ChunkGraph {
                split_point_module_identifier_to_chunk_ukey: {},
                block_to_chunk_group_ukey: {},
                chunk_graph_module_by_module_identifier: {},
                chunk_graph_chunk_by_chunk_ukey: {},
                runtime_ids: {},
            },
            chunk_group_by_ukey: Database,
            entrypoints: {},
            async_entrypoints: [],
            named_chunk_groups: {},
            named_chunks: {},
        },
        hash: Some(
            RspackHashDigest {
                encoded: "b15371b21063e9bcde2d6b256661e17c",
            },
        ),
        used_chunk_ids: {},
        file_dependencies: {},
        context_dependencies: {},
        missing_dependencies: {},
        build_dependencies: {},
        import_var_map: {},
        module_executor: Some(
            ModuleExecutor {
                request_dep_map: {},
                make_artifact: MakeArtifact {
                    diagnostics: [],
                    has_module_graph_change: false,
                    built_modules: {},
                    make_failed_dependencies: {},
                    make_failed_module: {},
                    module_graph_partial: ModuleGraphPartial {
                        modules: {},
                        dependencies: {},
                        blocks: {},
                        module_graph_modules: {},
                        connections: {},
                        dependency_id_to_module_identifier: {},
                        dependency_id_to_connection_id: {},
                        dependency_id_to_parents: {},
                        exports_info_map: VecMap {
                            inner: [],
                        },
                        export_info_map: VecMap {
                            inner: [],
                        },
                        connection_to_condition: {},
                        dep_meta_map: {},
                    },
                    entry_dependencies: {},
                    file_dependencies: FileCounter {
                        inner: {},
                    },
                    context_dependencies: FileCounter {
                        inner: {},
                    },
                    missing_dependencies: FileCounter {
                        inner: {},
                    },
                    build_dependencies: FileCounter {
                        inner: {},
                    },
                },
                event_sender: None,
                stop_receiver: None,
                assets: {},
                code_generated_modules: {},
                executed_runtime_modules: {},
            },
        ),
        modified_files: {},
        removed_files: {},
        make_artifact: MakeArtifact {
            diagnostics: [],
            has_module_graph_change: true,
            built_modules: {},
            make_failed_dependencies: {
                (
                    DependencyId(
                        0,
                    ),
                    None,
                ),
            },
            make_failed_module: {},
            module_graph_partial: ModuleGraphPartial {
                modules: {},
                dependencies: {
                    DependencyId(
                        0,
                    ): Some(
                        EntryDependency {
                            id: DependencyId(
                                0,
                            ),
                            request: "/Users/bytedance/project/rspack-rust-api/fixtures/index.js",
                            context: Context {
                                inner: "/Users/bytedance/project/rspack-rust-api",
                            },
                            is_global: true,
                        },
                    ),
                },
                blocks: {},
                module_graph_modules: {},
                connections: {},
                dependency_id_to_module_identifier: {},
                dependency_id_to_connection_id: {},
                dependency_id_to_parents: {},
                exports_info_map: VecMap {
                    inner: [],
                },
                export_info_map: VecMap {
                    inner: [],
                },
                connection_to_condition: {},
                dep_meta_map: {},
            },
            entry_dependencies: {
                DependencyId(
                    0,
                ),
            },
            file_dependencies: FileCounter {
                inner: {},
            },
            context_dependencies: FileCounter {
                inner: {},
            },
            missing_dependencies: FileCounter {
                inner: {},
            },
            build_dependencies: FileCounter {
                inner: {},
            },
        },
    },
}
